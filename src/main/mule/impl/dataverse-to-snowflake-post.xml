<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cloudhub="http://www.mulesoft.org/schema/mule/cloudhub"
	xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:snowflake="http://www.mulesoft.org/schema/mule/snowflake" xmlns:azure-data-lake-storage="http://www.mulesoft.org/schema/mule/azure-data-lake-storage" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/azure-data-lake-storage http://www.mulesoft.org/schema/mule/azure-data-lake-storage/current/mule-azure-data-lake-storage.xsd
http://www.mulesoft.org/schema/mule/snowflake http://www.mulesoft.org/schema/mule/snowflake/current/mule-snowflake.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/cloudhub http://www.mulesoft.org/schema/mule/cloudhub/current/mule-cloudhub.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<flow name="dataverse-to-snowflake-postFlow" doc:id="b1c524a9-005c-48c0-a873-d93ccfdbf8c5" >
		<flow-ref doc:name="set-current-date" doc:id="f0352659-bb80-4ab9-94d7-01d59ededb71" name="set-current-date"/>
		<set-variable value="618" doc:name="integration_id: 618" doc:id="3f465f41-3c9a-4a0f-b97c-cbd5e20cdebe" variableName="integration_id"/>
		<flow-ref doc:name="get-array-of-tables-by-integration_id" doc:id="b044f845-41f1-4143-9537-907fed077310" name="get-array-of-tables-by-integration_id" />
		<batch:job jobName="dataverse-to-snowflake-postBatch_Job" doc:id="103a81ce-cbcf-4cd3-a19a-7b0aa826bd1f" maxFailedRecords="-1">
			<batch:process-records >
				<batch:step name="Dataverse-to-snowflake" doc:id="7c418dfa-53dd-4674-a2af-e7cf8db266a3" >
					<json-logger:logger doc:name="Batch step" doc:id="179e9072-68f5-4861-8eb7-658fc06ba87e" config-ref="JSON_Logger_Config" message="Batch step" tracePoint="FLOW" priority="DEBUG">
						<json-logger:content ><![CDATA[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]></json-logger:content>
					</json-logger:logger>
					<set-variable value="#[payload]" doc:name="tabla" doc:id="07479804-6361-43b9-acf3-a6142ffa3783" variableName="tabla" />
					<logger level="INFO" doc:name="tabla being processed" doc:id="b1afcff9-c343-40ea-b70b-18f8c6c1fd11" message='#["Processing " ++ vars.tabla as String ++ " ============================================================================================================="]' />
					<flow-ref doc:name="dataverse-to-snowflake-Flow" doc:id="c720c960-840b-4ce4-be73-8ede3c9cf67b" name="dataverse-to-snowflake-Flow" />
				</batch:step>
				<batch:step name="BatchErrorHandler" doc:id="5c4d11c6-8f0b-4d16-aec1-92e7df180158" acceptPolicy="ONLY_FAILURES">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="a9f3fac9-2f9e-44c5-917c-c586f6782b10" streaming="true">
						<foreach doc:name="For Each" doc:id="cb96dfe2-a204-43af-b8bf-f0afab7acdc3" >
							<set-variable value="#[vars.tablas default [] ++ [vars.tabla default 'empty table error' as String]]" doc:name="tablas" doc:id="a981a72a-792e-47f2-a295-c9ce92c0045f" variableName="tablas"/>
							<set-variable value='#[vars.record_exception default {} ++ 
	(vars.record.record.stepExceptions 
		mapObject { ($$ ++ "@" ++ vars.tabla): $.message } default {"": ""}
	)]' doc:name="record_exception" doc:id="a4ef2f2a-f111-442b-801a-9f58a7896522" variableName="record_exception" />
						</foreach>
						<set-variable value='#[vars.record_exception 
	pluck ("- Step: " ++ $$ ++ " - " ++ $)
	reduce ($ ++ "\n\n" ++ $$) default ""]' doc:name="step_errors" doc:id="7b039f37-2b34-43a2-b9e5-ec307622a12a" variableName="step_errors" />
						<set-variable value="${app.name}" doc:name="domain_notification" doc:id="8b53570b-2fb4-40b2-8de3-5ab1b999e33c" variableName="domain_notification" />
						<set-variable value='#["ERROR " ++ p("app.name") ++ ": No se pudieron procesar las siguientes tablas: " ++ (vars.tablas joinBy ", ") as String ++ "\n\nDetalle de los errores: " ++ vars.step_errors as String]' doc:name="message_notification" doc:id="fcbc6903-7cef-4cfd-860d-49a7fffb2612" variableName="message_notification" />
						<logger level="INFO" doc:name="Log message notification" doc:id="9b7f5e13-2a23-4d87-a22d-8d0187e76b5d" message="#[vars.message_notification]" />
						<try doc:name="Try" doc:id="2814769a-36a4-4f4a-91ab-70541289c7cd" >
							<cloudhub:create-notification doc:name="Create Notification" doc:id="e3f80833-721a-4755-ab1e-65e0832579c5" config-ref="CloudHub_Config" domain="#[vars.domain_notification]">
							<cloudhub:message><![CDATA[#[vars.message_notification]]]></cloudhub:message>
					</cloudhub:create-notification>
							<error-handler >
								<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="5ece6854-0cef-4991-b7ab-1f74d2dabdad" when="#[error.errorType.namespace == 'CLOUDHUB']" >
									<json-logger:logger doc:name="No se pudo enviar la notificación a Cloudhub" doc:id="fa420821-8882-4d93-994c-a6bea641c6e8" config-ref="JSON_Logger_Config" message="No se pudo enviar la notificación a Cloudhub" tracePoint="EXCEPTION" priority="ERROR" >
										<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(error) 
}]]]></json-logger:content>
									</json-logger:logger>
								</on-error-continue>
							</error-handler>
						</try>
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<json-logger:logger doc:name="END Batch JOB" doc:id="1b57f988-def1-4a06-ba52-e5bd843d37ab" config-ref="JSON_Logger_Config" message="END Batch JOB" tracePoint="END"/>
			</batch:on-complete>
		</batch:job>
		<ee:transform doc:name="Transform Message" doc:id="86200cf7-2502-47d4-b57f-0c88fc5e4db0">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"response": "Batch Job dataverse-to-snowflake is running"
}]]></ee:set-payload>
					</ee:message>
			<ee:variables >
				<ee:set-variable variableName="httpStatus" ><![CDATA[201]]></ee:set-variable>
			</ee:variables>
				</ee:transform>
	</flow>
</mule>
