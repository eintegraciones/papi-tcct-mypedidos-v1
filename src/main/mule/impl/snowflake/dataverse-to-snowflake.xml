<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<sub-flow name="dataverse-to-snowflake-Flow" doc:id="b505bcb2-66ba-45e5-8526-d62257e67f3b" >
		<json-logger:logger doc:name="START: Dataverse to Snowflake" doc:id="dbc195c9-10b3-4450-8ea4-998fd542b435" config-ref="JSON_Logger_Config" message="START: Dataverse to Snowflake" >
			<json-logger:content ><![CDATA[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(payload) 
}]]></json-logger:content>
		</json-logger:logger>
		<set-variable value="#[payload]" doc:name="tabla" doc:id="8abb1794-a5e5-429e-ba97-c222b167e9b1" variableName="tabla" />
		<http:request method="GET" doc:name="GET /api/v1/dataverse/{tabla}" doc:id="61667e64-6978-40b7-ae62-b7816a25c7dd" config-ref="Dataverse_HTTP_Request_configuration" path='#["/dataverse/" ++ vars.tabla as String]'>
			<reconnect frequency="5000" count="3" />
		</http:request>
		<set-variable value="#[%dw 2.0
output application/java
---
p('dataverse-snowflake.tablas.' ++ (vars.tabla as String) ++ '.tablename')]" doc:name="snowflake-tablename" doc:id="7698eac2-fa02-43b2-a298-9404539127c2" variableName="snowflake-tablename" />
		<set-payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;payload.response map(payload.response[$$] &#10;filterObject ((value, key, index) -&gt; &#10;    !(key contains("@"))&#10;))]' doc:name="To Json with etags filtered" doc:id="9a1a6598-aa20-499c-8f00-6b6fd8f32fbf" />
		<set-payload value='#[%dw 2.0
output application/json
---
payload map ((item, index) -&gt;
    item mapObject (value, key) -&gt; {
        (p("dataverse-snowflake.tablas." ++ vars.tabla ++ "." ++ key) as String default key): value
    }
)]' doc:name="map payload to snowflake" doc:id="e3be5acf-d0e2-4183-9fa6-95a3baebff53" />
		<http:request method="POST" doc:name="POST /api/v1/snowflake/{tabla}" doc:id="ad23f1e2-dda9-427f-a10a-1887492c663e" config-ref="Snowflake_HTTP_Request_configuration" path='#["/snowflake/" ++ vars["snowflake-tablename"]]' >
			<reconnect frequency="5000" count="3" />
		</http:request>
		<json-logger:logger doc:name="END: Dataverse to Snowflake" doc:id="23996203-ae60-4159-ac71-97314fde795e" config-ref="JSON_Logger_Config" message="END: Gold to snowflake" tracePoint="END"/>
	
</sub-flow>

</mule>
